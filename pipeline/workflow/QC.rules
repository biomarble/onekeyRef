import pandas as pd
configfile: "configs/config.yaml"
basedir = os.path.abspath(".")
samples = pd.read_csv(config["SAMPLEINFO"], sep = '\t', header = 0)['sample']
input_path = basedir + "/" +config["READSPATH"]
tmp_path =basedir + "/" + config["OUTPUTPATH"] 
final_path = basedir + "/" + config["FINALOUTPUT"] 
rule end:
    input:
        report = final_path + "/0.QC/report_quality_control.html"
rule getReads:
    output:
        forfq = temp(tmp_path + "/reads/{sample}_R1.fq.gz"),
        revfq = temp(tmp_path + "/reads/{sample}_R2.fq.gz")
    params:
        input_path = input_path
    shell:
        "    ln -s {params.input_path}/{wildcards.sample}.*R1*.f*q.gz {output.forfq} "
        " && ln -s {params.input_path}/{wildcards.sample}.*R2*.f*q.gz {output.revfq}"
        
rule qualityControl:
    input:
        forfq = tmp_path + "/reads/{sample}_R1.fq.gz",
        revfq = tmp_path + "/reads/{sample}_R2.fq.gz"
    output:
        fastqc_forward = final_path + "/0.QC/{sample}_R1_fastqc.html",
        fastqc_reverse = final_path + "/0.QC/{sample}_R2_fastqc.html"
    params:
        outputpath = final_path + "/0.QC"
    shell:
        "fastqc -t $(({config[NCORE]}+0)) -o {params.outputpath} {input.forfq} && "
        "fastqc -t $(({config[NCORE]}+0)) -o {params.outputpath} {input.revfq}"
        
rule summaryReport:
    input:
        fastqc_forward = expand(final_path + "/0.QC/{sample}_R1_fastqc.html", sample = samples),
        fastqc_reverse = expand(final_path + "/0.QC/{sample}_R2_fastqc.html", sample = samples)
    output:
        report = final_path + "/0.QC/report_quality_control.html"
    params:
        path = final_path + "/0.QC"
    shell:
        "multiqc {params.path} --filename {output.report}"
